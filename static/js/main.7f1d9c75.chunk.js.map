{"version":3,"sources":["Cgpa.js","App.js","reportWebVitals.js","index.js"],"names":["Cgpa","useState","sem1","sem2","sem3","sem4","sem6","sem5","sem7","sem8","cgpa","setAdd","sum","setSum","useEffect","Math","floor","parseInt","className","forhtml","class","type","id","value","onChange","e","target","onClick","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f1d9c75.chunk.js","sourcesContent":["import React , {useState,useEffect} from 'react'\r\nimport './form.css';\r\nfunction Cgpa() {\r\n    const [cgpa,setAdd] = useState({sem1:\"\",\r\n     sem2:\"\", sem3:\"\",\r\n     sem4:\"\", sem6:\"\",\r\n     sem5:\"\", sem7:\"\",\r\n     sem8:\"\",\r\n    \r\n    \r\n    });\r\n    const [sum,setSum] = useState(0)\r\n    useEffect(()=>{\r\n         setSum(Math.floor(parseInt(cgpa.sem1)+parseInt(cgpa.sem2)+parseInt(cgpa.sem3)+\r\n         parseInt(cgpa.sem4)+parseInt(cgpa.sem5)+parseInt(cgpa.sem6)+parseInt(cgpa.sem7)+parseInt(cgpa.sem8))/8) \r\n    },[cgpa])\r\n  \r\n    return (\r\n        <form className>\r\n           <h1>CGPA CALCULATOR</h1>\r\n    <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 1</label>\r\n    <input type=\"text\" className=\"form-control \" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem1} \r\n     onChange={e =>setAdd({...cgpa,sem1:e.target.value})} />   \r\n    <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 2</label>\r\n    <input type=\"text\" className=\"form-control \" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem2} \r\n     onChange={e =>setAdd({...cgpa,sem2:e.target.value})} />   \r\n      <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 3</label>\r\n    <input type=\"text\" className=\"form-control \" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem3} \r\n     onChange={e =>setAdd({...cgpa,sem3:e.target.value})} />\r\n     <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 4</label>\r\n    <input type=\"text\" className=\"form-control \" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem4} \r\n     onChange={e =>setAdd({...cgpa,sem4:e.target.value})} />          \r\n    <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 5</label>\r\n    <input type=\"text\" className=\"form-control \" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem5} \r\n     onChange={e =>setAdd({...cgpa,sem5:e.target.value})} />   \r\n    <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 6</label>\r\n    <input type=\"text\" className=\"form-control \" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem6} \r\n     onChange={e =>setAdd({...cgpa,sem6:e.target.value})} />             \r\n      <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 7</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem7} \r\n     onChange={e =>setAdd({...cgpa,sem7:e.target.value})} />                     \r\n         <label forhtml=\"exampleInputEmail1\" class=\"form-label my-2\">SEM 8</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\"\r\n     value={cgpa.sem8} \r\n     onChange={e =>setAdd({...cgpa,sem8:e.target.value})} />             \r\n               <button onClick={e => alert(sum)} className=\"btn btn-dark mx-auto my-3\">Answer</button>\r\n              {/* <button onClick={e=>setAdd(\"\")} className=\"btn btn-primary mx-3\">Reset</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Cgpa\r\n//  value={cgpa.sem1} \r\n// onChange={e =>setAdd({...cgpa,sem1:e.target.value})}","import Cgpa from './Cgpa';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cgpa/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}